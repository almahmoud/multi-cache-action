name: 'Restore cache from a list of keys'
description: 'Allows restoring cache from a list of keys, which can be programmatically generated in the workflow.'
branding:
  icon: 'archive'
  color: 'purple'
inputs:
  install-node:
    description: "true/false flag for whether to run the `actions/setup-node` action"
    required: false
    default: 'true'
  input-list:
    description: "List to loop over, as a quoted comma-separated list, eg: `'pkg1','pkg2'`"
    required: true
  path-prefix:
    description: "Prefix for paths to save, prepended to each in the input list"
    required: true
  key-prefix:
    description: "Prefix for keys to save, prepended to each in the input list"
    required: true
runs:
  using: "composite"
  steps:
      - uses: actions/setup-node@v4
        if: ${{ inputs.install-node == 'true' }}
      - name: Install NPM packages
        shell: sh
        run: npm install @actions/cache && npm install @actions/artifact
      - uses: actions/github-script@v7
        id: script
        name: Restore cache script
        with:
          script: |
            const cache = require('@actions/cache');
            const artifact = require('@actions/artifact');

            const loopList = [
                ${{ inputs.input-list }}
            ]

            const pathPrefix = '${{ inputs.path-prefix }}'
            const keyPrefix = '${{ inputs.key-prefix }}'
            const restoreKeys = [];


            for (const each of loopList) {
              const path = `${pathPrefix}/${each}`;
              const key = `${keyPrefix}/${each}`;
              
              const cacheId = await cache.saveCache([path], key);

              if (cacheKey) {
                console.log(`Cache saved cache with id: ${cacheId}`);
              } else {
                console.log(`Failed to save cache for key: ${key}`);
              }
              const {artId, artSize} = await artifact.uploadArtifact(key,[path])
              if (artId) {
                console.log(`Created artifact with id: ${artId} (bytes: ${artSize}`)
              } else {
                console.log(`Failed to upload artifact for key: ${key}`);
              }
            }
